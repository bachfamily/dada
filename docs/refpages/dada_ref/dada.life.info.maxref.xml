<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="dada.life.info" module="dada" kind="patcher">

	<digest>
		Pattern information in 2D cellular automata
	</digest>

	<description>
		Reports information about <o>dada.life</o> configurations.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">dada</metadata>
		<metadata name="tag">dada abstractions</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Pattern from <o>dada.life</o>'s dump
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Pattern periodicity
			</digest>
			<description>
				Outputs the pattern period, or "inf" if no periodicity is detected (until <m>maxiter</m>).
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Pattern period delta
			</digest>
			<description>
				If a periodicity is detected, outputs the displacement of the pattern after one full period, in the form
				<m>delta_x</m> <m>delta_y</m>. If no periodicity is detected, <b>null</b> is output.
				For instance, the standard life glider will have as displacement <b>1 -1</b>, since it
				will appear again after one period 1 cell at right and 1 cell down with respect to the original pattern.
			</description>
		</outlet>
		<outlet id="2" type="INLET_TYPE">
			<digest>
				Annihilation time
			</digest>
			<description>
				Outputs the number of step before pattern becomes an empty matrix (every cell dies); "inf" if no annihilation is detected
				(until <m>maxiter</m>).
			</description>
		</outlet>
		<outlet id="3" type="INLET_TYPE">
			<digest>
				Trimmed pattern
			</digest>
			<description>
				Outputs the pattern matrix, where all the empty rows and columns at left, right, top and bottom are removed; in other words
				the pattern is output in its "minimal matrix".
			</description>
		</outlet>
		<outlet id="4" type="INLET_TYPE">
			<digest>
				Trimmed pattern coordinates
			</digest>
			<description>
				Outputs the coordinates of the "minimal matrix" with respect to the full world matrix, in the form
				<m>start_row</m> <m>end_row</m> <m>start_col</m> <m>end_col</m>.
			</description>
		</outlet>
		<outlet id="5" type="INLET_TYPE">
			<digest>
				Pattern orbit
			</digest>
			<description>
				If the <m>orbit</m> attribute is non-zero,
				outputs the sequence of patterns that follows the incoming one, each wrapped in a level of parenthesis.
			</description>
		</outlet>
		<outlet id="6" type="INLET_TYPE">
			<digest>
				Trimmed pattern orbit
			</digest>
			<description>
				If the <m>orbit</m> attribute is non-zero,
				outputs the trimmed pattern orbit, i.e. the pattern orbit (see previous outlet), but trimmed in its "minimal matrix", i.e. all the empty rows
				at left, right, top and bottom are removed.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output result
			</digest>
			<description>
				Outputs the information on the most recently received input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Report information for configuration
			</digest>
			<description>
				An <m>llll</m> in the first inlet is considered as a <o>dada.life</o> dump
				(i.e. the llll one obtains when sending a <m>dump</m> message to <o>dada.life</o>.
				Information about patterns, periodicity and translation is reported from all outlets
				(see the documentation for each one of the outlets).
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="border" get="1" set="1" type="int" size="1">
			<digest>
				Border Handling
			</digest>
			<description>
				Sets the border conditions, establishing how the cells just beyond the world limits should be considered
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Border Handling" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="born" get="1" set="1" type="int_array" size="0">
			<digest>
				Born
			</digest>
			<description>
				Lists all the possibilities for the number of neighbours a dead cell must have in order to be born
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int_array" size="0" value="3" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Born" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="customrule" get="1" set="1" type="int" size="1">
			<digest>
				Use Custom Rule
			</digest>
			<description>
				Toggles the usage of the possibly defined custom rule for the automaton.
				The custom rule must be written in C and sent via the <m>rule</m> message.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Use Custom Rule" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="lattice" get="1" set="1" type="" size="1">
			<digest>
				Lattice Type
			</digest>
			<description>
				Sets the lattice type (either 0 = square, which is the default, or 1 = triangular)
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Lattice Type" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="maxiter" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Number of Iterations
			</digest>
			<description>
				Set the maximum number of iteration for the analysis algorithm.
				(If an oscillator or spaceship is detected, the pattern is stopped before <m>maxiter</m>
				is reached.)
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="100" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Number of Iterations" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="neighborhood" get="1" set="1" type="int" size="1">
			<digest>
				Neighborhood Range
			</digest>
			<description>
				Sets the neighborhood size (for the <m>born</m> and <m>stayalive</m> attributes,
				as well as for the custom rule).
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Neighborhood Range" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="orbit" get="1" set="1" type="int" size="1">
			<digest>
				Outputs Pattern Orbit
			</digest>
			<description>
				Toggles the ability to also output the pattern orbit (defaults to 1).
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outputs Pattern Orbit" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="stayalive" get="1" set="1" type="int_array" size="0">
			<digest>
				Stay Alive
			</digest>
			<description>
				Lists all the possibilities for the number a living cell must have in order to stay alive
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int_array" size="0" value="2 3" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Stay Alive" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		This module is an abstraction, the algorithms it implements are the naive algorithms.
		Hence it will not be the most efficient implementation, nor the most powerful one.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="dada.life" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Pattern from <o>dada.life</o>'s dump.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (int/inf)">
			<description>
				Pattern periodicity.
				Outputs the pattern period, or "inf" if no periodicity is detected (until <m>maxiter</m>).
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Pattern period delta.
				If a periodicity is detected, outputs the displacement of the pattern after one full period, in the form
				<m>delta_x</m> <m>delta_y</m>. If no periodicity is detected, <b>null</b> is output.
				For instance, the standard life glider will have as displacement <b>1 -1</b>, since it
				will appear again after one period 1 cell at right and 1 cell down with respect to the original pattern.
			</description>
		</entry>
		<entry name ="Outlet 3 (int/inf)">
			<description>
				Annihilation time.
				Outputs the number of step before pattern becomes an empty matrix (every cell dies); "inf" if no annihilation is detected
				(until <m>maxiter</m>).
			</description>
		</entry>
		<entry name ="Outlet 4 (llll)">
			<description>
				Trimmed pattern.
				Outputs the pattern matrix, where all the empty rows and columns at left, right, top and bottom are removed; in other words
				the pattern is output in its "minimal matrix".
			</description>
		</entry>
		<entry name ="Outlet 5 (llll)">
			<description>
				Trimmed pattern coordinates.
				Outputs the coordinates of the "minimal matrix" with respect to the full world matrix, in the form
				<m>start_row</m> <m>end_row</m> <m>start_col</m> <m>end_col</m>.
			</description>
		</entry>
		<entry name ="Outlet 6 (llll)">
			<description>
				Pattern orbit.
				If the <m>orbit</m> attribute is non-zero,
				outputs the sequence of patterns that follows the incoming one, each wrapped in a level of parenthesis.
			</description>
		</entry>
		<entry name ="Outlet 7 (llll)">
			<description>
				Trimmed pattern orbit.
				If the <m>orbit</m> attribute is non-zero,
				outputs the trimmed pattern orbit, i.e. the pattern orbit (see previous outlet), but trimmed in its "minimal matrix", i.e. all the empty rows
				at left, right, top and bottom are removed.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		This module is an abstraction, the algorithms it implements are the naive algorithms.
		Hence it will not be the most efficient implementation, nor the most powerful one.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
life, Conway, cellular automaton, cellular automata, pattern, information.
			</description>
		</entry>
	</misc>

</c74object>